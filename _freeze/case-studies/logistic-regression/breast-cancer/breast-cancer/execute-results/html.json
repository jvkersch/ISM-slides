{
  "hash": "6863710a1ffabdbb720b3593d83aa5b8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Breast cancer\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n```\n:::\n\n\nhttps://archive.ics.uci.edu/dataset/17/breast+cancer+wisconsin+diagnostic\n\nBreast Cancer Wisconsin (Diagnostic) Data Set\n\na) radius (mean of distances from center to points on the perimeter)\nb) texture (standard deviation of gray-scale values)\n\n\n# EDA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbdiag <- read_csv(\"bdiag.csv\") |>\n  mutate(diagnosis = as.factor(diagnosis),\n         diagnosis_binary = ifelse(diagnosis == \"B\", 0, 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 569 Columns: 32\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): diagnosis\ndbl (31): id, radius_mean, texture_mean, perimeter_mean, area_mean, smoothne...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(bdiag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 569\nColumns: 33\n$ id                      <dbl> 842302, 842517, 84300903, 84348301, 84358402, …\n$ diagnosis               <fct> M, M, M, M, M, M, M, M, M, M, M, M, M, M, M, M…\n$ radius_mean             <dbl> 17.990, 20.570, 19.690, 11.420, 20.290, 12.450…\n$ texture_mean            <dbl> 10.38, 17.77, 21.25, 20.38, 14.34, 15.70, 19.9…\n$ perimeter_mean          <dbl> 122.80, 132.90, 130.00, 77.58, 135.10, 82.57, …\n$ area_mean               <dbl> 1001.0, 1326.0, 1203.0, 386.1, 1297.0, 477.1, …\n$ smoothness_mean         <dbl> 0.11840, 0.08474, 0.10960, 0.14250, 0.10030, 0…\n$ compactness_mean        <dbl> 0.27760, 0.07864, 0.15990, 0.28390, 0.13280, 0…\n$ concavity_mean          <dbl> 0.30010, 0.08690, 0.19740, 0.24140, 0.19800, 0…\n$ `concave points_mean`   <dbl> 0.14710, 0.07017, 0.12790, 0.10520, 0.10430, 0…\n$ symmetry_mean           <dbl> 0.2419, 0.1812, 0.2069, 0.2597, 0.1809, 0.2087…\n$ fractal_dimension_mean  <dbl> 0.07871, 0.05667, 0.05999, 0.09744, 0.05883, 0…\n$ radius_se               <dbl> 1.0950, 0.5435, 0.7456, 0.4956, 0.7572, 0.3345…\n$ texture_se              <dbl> 0.9053, 0.7339, 0.7869, 1.1560, 0.7813, 0.8902…\n$ perimeter_se            <dbl> 8.589, 3.398, 4.585, 3.445, 5.438, 2.217, 3.18…\n$ area_se                 <dbl> 153.40, 74.08, 94.03, 27.23, 94.44, 27.19, 53.…\n$ smoothness_se           <dbl> 0.006399, 0.005225, 0.006150, 0.009110, 0.0114…\n$ compactness_se          <dbl> 0.049040, 0.013080, 0.040060, 0.074580, 0.0246…\n$ concavity_se            <dbl> 0.05373, 0.01860, 0.03832, 0.05661, 0.05688, 0…\n$ `concave points_se`     <dbl> 0.015870, 0.013400, 0.020580, 0.018670, 0.0188…\n$ symmetry_se             <dbl> 0.03003, 0.01389, 0.02250, 0.05963, 0.01756, 0…\n$ fractal_dimension_se    <dbl> 0.006193, 0.003532, 0.004571, 0.009208, 0.0051…\n$ radius_worst            <dbl> 25.38, 24.99, 23.57, 14.91, 22.54, 15.47, 22.8…\n$ texture_worst           <dbl> 17.33, 23.41, 25.53, 26.50, 16.67, 23.75, 27.6…\n$ perimeter_worst         <dbl> 184.60, 158.80, 152.50, 98.87, 152.20, 103.40,…\n$ area_worst              <dbl> 2019.0, 1956.0, 1709.0, 567.7, 1575.0, 741.6, …\n$ smoothness_worst        <dbl> 0.1622, 0.1238, 0.1444, 0.2098, 0.1374, 0.1791…\n$ compactness_worst       <dbl> 0.6656, 0.1866, 0.4245, 0.8663, 0.2050, 0.5249…\n$ concavity_worst         <dbl> 0.71190, 0.24160, 0.45040, 0.68690, 0.40000, 0…\n$ `concave points_worst`  <dbl> 0.26540, 0.18600, 0.24300, 0.25750, 0.16250, 0…\n$ symmetry_worst          <dbl> 0.4601, 0.2750, 0.3613, 0.6638, 0.2364, 0.3985…\n$ fractal_dimension_worst <dbl> 0.11890, 0.08902, 0.08758, 0.17300, 0.07678, 0…\n$ diagnosis_binary        <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ntrain_size <- 0.80 * nrow(bdiag)\ntrain_ind <- sample(seq_len(nrow(bdiag)), size = train_size)\n\ntrain <- bdiag[train_ind, ]\ntest <- bdiag[-train_ind, ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(train, aes(x = texture_mean, y = radius_mean, color = diagnosis)) +\n  geom_jitter()\n```\n\n::: {.cell-output-display}\n![](breast-cancer_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(train, aes(y = texture_mean, fill = diagnosis)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](breast-cancer_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(train, aes(y = radius_mean, fill = diagnosis)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](breast-cancer_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n# Simple regression model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm_simple <- glm(diagnosis ~ radius_mean, data = train, family = \"binomial\")\nsummary(m_simple)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = diagnosis ~ radius_mean, family = \"binomial\", data = train)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -15.8086     1.5310 -10.326   <2e-16 ***\nradius_mean   1.0662     0.1066   9.998   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 604.40  on 454  degrees of freedom\nResidual deviance: 256.54  on 453  degrees of freedom\nAIC: 260.54\n\nNumber of Fisher Scoring iterations: 6\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(train, aes(x = radius_mean, y = diagnosis_binary)) +\n  geom_jitter(aes(color = diagnosis), height = 0.10) +\n  stat_smooth(method=\"glm\", se=FALSE, color = \"gray40\",\n              method.args = list(family=binomial))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](breast-cancer_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nconfint(m_simple)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWaiting for profiling to be done...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  2.5 %     97.5 %\n(Intercept) -19.0612931 -13.036409\nradius_mean   0.8731684   1.292752\n```\n\n\n:::\n:::\n\n\n## Model evaluation (classification)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: lattice\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'caret'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n\n\n:::\n\n```{.r .cell-code}\npred_test <- predict(m_simple, test, type=\"response\")\nclass_test <- ifelse(pred_test >= 0.5, \"M\", \"B\")\n\nconf_matrix <- confusionMatrix(as.factor(class_test), test$diagnosis)\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  B  M\n         B 70 13\n         M  5 26\n                                         \n               Accuracy : 0.8421         \n                 95% CI : (0.762, 0.9037)\n    No Information Rate : 0.6579         \n    P-Value [Acc > NIR] : 8.801e-06      \n                                         \n                  Kappa : 0.6311         \n                                         \n Mcnemar's Test P-Value : 0.09896        \n                                         \n            Sensitivity : 0.9333         \n            Specificity : 0.6667         \n         Pos Pred Value : 0.8434         \n         Neg Pred Value : 0.8387         \n             Prevalence : 0.6579         \n         Detection Rate : 0.6140         \n   Detection Prevalence : 0.7281         \n      Balanced Accuracy : 0.8000         \n                                         \n       'Positive' Class : B              \n                                         \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pROC)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nType 'citation(\"pROC\")' for a citation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'pROC'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n```\n\n\n:::\n\n```{.r .cell-code}\npred_test <- predict(m_simple, test, type=\"response\")\nroc_obj <- roc(test$diagnosis_binary, pred_test)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting levels: control = 0, case = 1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting direction: controls < cases\n```\n\n\n:::\n\n```{.r .cell-code}\nauc <- round(auc(test$diagnosis_binary, pred_test), 4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting levels: control = 0, case = 1\nSetting direction: controls < cases\n```\n\n\n:::\n\n```{.r .cell-code}\nggroc(roc_obj) +\n    ggtitle(paste0('ROC Curve ', '(AUC = ', auc, ')'))\n```\n\n::: {.cell-output-display}\n![](breast-cancer_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n# Multiple regression model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm_multiple <- glm(diagnosis ~ radius_mean + texture_mean, data = train, family = \"binomial\")\nsummary(m_multiple)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = diagnosis ~ radius_mean + texture_mean, family = \"binomial\", \n    data = train)\n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -20.51694    2.04729 -10.021  < 2e-16 ***\nradius_mean    1.09536    0.11727   9.341  < 2e-16 ***\ntexture_mean   0.21749    0.04034   5.391 7.01e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 604.40  on 454  degrees of freedom\nResidual deviance: 223.68  on 452  degrees of freedom\nAIC: 229.68\n\nNumber of Fisher Scoring iterations: 7\n```\n\n\n:::\n:::\n\n\n## Model evaluation (classification)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred_test <- predict(m_multiple, test, type=\"response\")\nclass_test <- ifelse(pred_test >= 0.5, \"M\", \"B\")\n\nconf_matrix <- confusionMatrix(as.factor(class_test), test$diagnosis)\nprint(conf_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  B  M\n         B 71 14\n         M  4 25\n                                         \n               Accuracy : 0.8421         \n                 95% CI : (0.762, 0.9037)\n    No Information Rate : 0.6579         \n    P-Value [Acc > NIR] : 8.801e-06      \n                                         \n                  Kappa : 0.6262         \n                                         \n Mcnemar's Test P-Value : 0.03389        \n                                         \n            Sensitivity : 0.9467         \n            Specificity : 0.6410         \n         Pos Pred Value : 0.8353         \n         Neg Pred Value : 0.8621         \n             Prevalence : 0.6579         \n         Detection Rate : 0.6228         \n   Detection Prevalence : 0.7456         \n      Balanced Accuracy : 0.7938         \n                                         \n       'Positive' Class : B              \n                                         \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pROC)\n\npred_test <- predict(m_multiple, test, type=\"response\")\nroc_obj <- roc(test$diagnosis_binary, pred_test)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting levels: control = 0, case = 1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting direction: controls < cases\n```\n\n\n:::\n\n```{.r .cell-code}\nauc <- round(auc(test$diagnosis_binary, pred_test), 4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting levels: control = 0, case = 1\nSetting direction: controls < cases\n```\n\n\n:::\n\n```{.r .cell-code}\nggroc(roc_obj) +\n    ggtitle(paste0('ROC Curve ', '(AUC = ', auc, ')'))\n```\n\n::: {.cell-output-display}\n![](breast-cancer_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Model significance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnull_model <- glm(diagnosis ~ 1, data = train, family = \"binomial\")\nanova(null_model, m_multiple, test = \"Chisq\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table\n\nModel 1: diagnosis ~ 1\nModel 2: diagnosis ~ radius_mean + texture_mean\n  Resid. Df Resid. Dev Df Deviance  Pr(>Chi)    \n1       454     604.40                          \n2       452     223.68  2   380.72 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n",
    "supporting": [
      "breast-cancer_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}